// Generated by dia2code
#ifndef ENGINE__ENGINE__H
#define ENGINE__ENGINE__H

#include <iostream>
#include <mutex>

namespace engine {
  class CommandSet;
  class ActionList;
  class Command;
  class Action;
};
namespace state {
  class Fighter;
  class Infantry;
  class MobileElement;
  class State;
  class Structure;
}

#include "EngineMode.h"
#include "state/Fighter.h"
#include "state/Infantry.h"
#include "state/MobileElement.h"
#include "state/State.h"
#include "state/Structure.h"
#include "ActionList.h"
#include "CommandSet.h"

namespace engine {

  /// class Engine - 
  class Engine {
    // Associations
    engine::EngineMode mode;
    // Attributes
  protected:
    CommandSet* commandset;
    ActionList* actionlist;
    mutable std::mutex engine_mutex;
    // Operations
  public:
    ~Engine ();
    Engine (CommandSet* commandset, ActionList* actionlist);
    EngineMode getMode () const;
    void addCommand (Command* cmd);
    void addAction (Action* action);
    bool update (int time);
    void apply ();
    void run ();
  protected:
    void loadLevel (const char* file_name) const;
    void setMode (EngineMode mode);
  };

};

#endif
