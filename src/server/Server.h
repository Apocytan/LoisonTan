// Generated by dia2code
#ifndef SERVER__SERVER__H
#define SERVER__SERVER__H

#include <iostream>
#include <vector>
#include <thread>

namespace engine {
  class Command;
  class Engine;
};
namespace state {
  class State;
};
namespace server {
  class Observable;
}

#include "state/State.h"
#include "Observable.h"
#include "engine/Engine.h"
#include "engine/Command.h"

namespace server {

  /// class Server - 
  class Server : public server::Observable, public engine::Engine, public state::State, public engine::Command {
    // Attributes
  public:
    std::vector <Command*> serverCommands;
  protected:
    engine::Engine* eng;
    std::thread* gamesThread;
    state::State CurrentState;
    // Operations
  public:
    Server (engine::Engine* eng, std::thread* gamesThread, state::State CurrentState, std::vector<Command*> serverCommands);
    virtual ~Server ();
    engine::Engine* getEngine ();
    virtual void run ();
    void join ();
  };

};

#endif
